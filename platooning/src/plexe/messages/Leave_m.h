//
// Generated file, do not edit! Created by nedtool 5.5 from plexe/messages/Leave.msg.
//

#ifndef __LEAVE_M_H
#define __LEAVE_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0505
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif

// dll export symbol
#ifndef PLEXE_API
#  if defined(PLEXE_EXPORT)
#    define PLEXE_API  OPP_DLLEXPORT
#  elif defined(PLEXE_IMPORT)
#    define PLEXE_API  OPP_DLLIMPORT
#  else
#    define PLEXE_API
#  endif
#endif



// cplusplus {{
#include "ManeuverMessage_m.h"
// }}

/**
 * Class generated from <tt>plexe/messages/Leave.msg:24</tt> by nedtool.
 * <pre>
 * //
 * // TODO generated message class
 * //
 * packet Leave extends ManeuverMessage
 * {
 *     double platoonSpeed;
 *     int platoonLane;
 *     int newPlatoonFormation[];
 *     int platoonLeaderId;
 * }
 * </pre>
 */
class PLEXE_API Leave : public ::ManeuverMessage
{
  protected:
    double platoonSpeed;
    int platoonLane;
    int *newPlatoonFormation; // array ptr
    unsigned int newPlatoonFormation_arraysize;
    int platoonLeaderId;

  private:
    void copy(const Leave& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Leave&);

  public:
    Leave(const char *name=nullptr, short kind=0);
    Leave(const Leave& other);
    virtual ~Leave();
    Leave& operator=(const Leave& other);
    virtual Leave *dup() const override {return new Leave(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual double getPlatoonSpeed() const;
    virtual void setPlatoonSpeed(double platoonSpeed);
    virtual int getPlatoonLane() const;
    virtual void setPlatoonLane(int platoonLane);
    virtual void setNewPlatoonFormationArraySize(unsigned int size);
    virtual unsigned int getNewPlatoonFormationArraySize() const;
    virtual int getNewPlatoonFormation(unsigned int k) const;
    virtual void setNewPlatoonFormation(unsigned int k, int newPlatoonFormation);
    virtual int getPlatoonLeaderId() const;
    virtual void setPlatoonLeaderId(int platoonLeaderId);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const Leave& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, Leave& obj) {obj.parsimUnpack(b);}


#endif // ifndef __LEAVE_M_H

